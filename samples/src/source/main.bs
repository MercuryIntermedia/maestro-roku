sub Main(args as dynamic)
'  ? "Launching with args "
'  ? args
  m.args = args

  InitScreen()
end sub

function InitScreen() as void
  'this will be where you setup your typical roku app
  'it will not be launched when running unit tests
  screen = createObject("roSGScreen")
  m.port = createObject("roMessagePort")
  screen.setMessagePort(m.port)

  input = createObject("roInput")
  input.setMessagePort(m.port)

  rootScene = screen.createScene("MainScene")
  rootScene.id = "ROOT"

  screen.show()

  'do any other stuff here that _must_ be done in main
  'I'm not a fan of that though; but just showing how it would work

  rootScene.callFunc("begin", m.args)
  rootScene.observeField("closeChannel", m.port)

  while(true)
    msg = wait(0, m.port)
    msgType = type(msg)

    if msgType = "roSGScreenEvent"
      if msg.isScreenClosed()
        return
      end if
    else if msgType = "roSGNodeEvent"
      if msg.getField() = "closeChannel"
        screen.close()
      end if
    else if msgType = "roInputEvent"
      info = msg.getInfo()
      if info <> invalid and info.rale = invalid
        rootScene.appController@.processDeeplinkingArgs(info)
      end if
    end if
  end while
end function