import "pkg:/source/view/BaseScreen.bs"
import "pkg:/source/core/Utils.bs"

@node("DynamicContainerTestScreen", "mv_BaseScreen")
class DynamicContainerTestScreen extends mv.BaseScreen

  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  '++ Private Fields
  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  private bgRect as mc.types.node
  private label as mc.types.node

  private dynamicContainer as mc.types.node

  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  '++ Initialization
  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  function new()
    super("DynamicContainerTestScreen")
  end function

  protected override function initialize()
    m.log.info("Initialized DynamicContainerTestScreen")
    super.initialize()

    m.bgRect = m.createSGNode("mv_Rectangle", m.top, "bgRect", {
      size: [1920, 1080]
      color: "#ff0000"
    })

    m.label = m.createSGNode("mv_Label", m.bgRect, "label", {
      text: "Dynamic container test screen"
      font: "font:MediumSystemFont"
      color: "#000000"
      translation: [500, 500]
    })
    transition = m.createSGNode("mv_FadeTransition", m.top, "fadeTransition", {
      color: "#ffff00"
    })
    m.dynamicContainer = m.createSGNode("mv_DynamicContainer", m.top, "dynamicContainer")
    m.dynamicContainer.transition = transition
  end function

  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  '++ Key Presses
  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  protected override function onKeyPressLeft() as boolean
    m.log.info("Adding a screen")

    view = m.createSgNode("NavControllerTestChildScreen", invalid, "NavControllerTestChildScreen")
    m.dynamicContainer@.setNextView(view)
    return true
  end function

end class
