import "pkg:/source/ml/ListMixin.bs"
import "pkg:/source/view/BaseScreen.bs"
import "pkg:/source/ml/ListDelegateMixin.bs"
import "pkg:/source/view/controls/Styles.bs"
import "pkg:/source/core/Utils.bs"

@node("ButtonScreen", "mv_BaseScreen")
class ButtonScreen extends mv.BaseScreen

  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  '++ Views
  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  private controlsGroup as mc.types.node
  private controlsGroup2 as mc.types.node
  private button1 as mc.types.node
  private button2 as mc.types.node
  private button3 as mc.types.node
  private button4 as mc.types.node
  private button5 as mc.types.node
  private animButton as mc.types.node

  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  '++ Private Fields
  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  private spoilersActive as boolean

  function new()
    super("ButtonScreen")
  end function

  protected override function initialize()
    super.initialize()

    bundle = m.styleManager@.loadBundle("pkg:/source/debug-screens/ButtonScreen.bundle")
    m.styleManager@.addStyle("buttonScreen", bundle.styles)
    m.createViewsFromStyleJson(bundle.views)
    item = {
      json: {
        title: "I SET MY TEXT WITH A DATA MAP"
      }
    }
    m.applyDataMapToControls(item)
  end function

  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  '++ Private Methods
  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  private function onButtonIndexChange(index as integer)
    m.log.info("selected button", index)
  end function

  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  '++ Key Presses
  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  private function isCapturingAnyKeyPress(key as string, press as boolean) as boolean
    return key <> "back" and key <> "up"
  end function

  protected override function onKeyPressLeft() as boolean
  if m.controlsGroup2.isFocused
    m.setFocus(m.controlsGroup)
    return true
  end if
  return false
  end function

  protected override function onKeyPressRight() as boolean
    if m.controlsGroup.isFocused:
      m.setFocus(m.controlsGroup2)
      return true
    end if
    return false
  end function

  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  '++ Lifecycle
  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  protected override function onGainedFocus(isSelfFocused as boolean)
    super.onGainedFocus(isSelfFocused)

    if isSelfFocused
      m.setFocus(m.controlsGroup)
    end if
  end function

end class
