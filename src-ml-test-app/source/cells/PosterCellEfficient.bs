import "pkg:/source/core/Utils.bs"
import "pkg:/source/ml/cells/BaseCell.bs"

@node("PosterCellEfficient", "ml_BaseCell")
class PosterCellEfficient extends ml.BaseCell

  private poster as mc.types.node
  private label as mc.types.node

  function new()
    super()
  end function

  protected override function createViews() as void
    m.poster = mc.createSGNode("mv_Poster", m.top, "poster", {
      translation: [0, 0]
      loadingBitmapUri: "pkg:/images/backgrounds/button-square-bg.9.png"
      failedBitmapUri: "pkg:/images/backgrounds/button-square-bg.9.png"
      uri: ""
      loadWidth: 400
      loadHeight: 250
      size: [400, 250]
      loadDisplayMode: "zoomToFill"
    })
    mc.createSGNode("mv_Rectangle", m.top, "rectangle", {
      opacity: 0.4
      color: "#000000"
      size: [400, 50]
      translation: [0, 100]
    })
    m.label = mc.createSGNode("mv_Label", m.top, "label", {
      size: [400, 50]
      fontKey: "medium,30"
      color: "#ffffff"
      horizAlign: "center"
      vertAlign: "center"
      translation: [10, 100]
    })

  end function

  protected override function cleanup()
    ' ? "CLEANUP"
  end function

  protected override function onShowWithContent(content as mc.types.node)
    ' ? "SHOW"
    m.poster.uri = m.content.HDGRIDPOSTERURL
    m.label.text = `${m.index} ${content.title}`
  end function

  protected override function onHide()
    m.poster.uri = ""'m.poster.loadingBitmapUri
  end function

end class
