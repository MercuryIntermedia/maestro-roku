namespace ml
  class ComponentPosition
    public position = 0
    public screenPosition = 0
    function new(position as integer, screenPosition as integer)
      m.position = position
      if screenPosition = invalid or screenPosition = -1
        m.screenPosition = 0
      else
        m.screenPosition = screenPosition
      end if
    end function
  end class

  class ComponentInfo
    public index = 0
    public contentIndex = 0
    public componentIndex = 0
    public component as mc.types.node
    public focusSettings as mc.types.node
    public direction = 0
    public positionsByDirection = []
    public isFlowFocusAllowed = false

    public function new(focusSettings as mc.types.node, positions as mc.types.array, isFlowFocusAllowed = false as boolean, componentIndex = 0 as integer, contentIndex = 0 as integer)
      m.focusSettings = focusSettings
      m.positionsByDirection = positions
      m.isFlowFocusAllowed = isFlowFocusAllowed
      m.componentIndex = componentIndex
      m.contentIndex = contentIndex
    end function

    public function getScrollOffsetForFlowFocus(direction as integer) as integer
      if direction < 1
        direction = 0
      end if
      position = m.positionsByDirection[direction]
      return - position.position + position.screenPosition
    end function

    public function getScreenPositionForFlowFocus(direction as integer) as integer
      if direction < 1
        direction = 0
      end if
      position = m.positionsByDirection[direction]
      return position.screenPosition
    end function

    public function getScreenPosition(direction as integer) as integer
      position = m.positionsByDirection[0]
      return position.screenPosition
    end function

    public function getScrollOffset(direction as integer) as integer
      position = m.positionsByDirection[0]
      return - position.position + position.screenPosition
    end function

    public function isFlowFocusPossible(scrollOffset as integer, maxOffset as integer, direction as integer) as boolean
      if not m.isFlowFocusAllowed
        ? "pppppp iFFP NO - not allowed for index " ;m.index
        return false
      end if

      if direction = -1 or direction = 0
        lastViableOffset = m.getScrollOffsetForFlowFocus(direction)
        ? "pppppp iFFP UP SO " ; scrollOffset ; " MO "; scrollOffset - maxOffset ; " O "; lastViableOffset
        return lastViableOffset < scrollOffset
      else
        lastViableOffset = m.getScrollOffsetForFlowFocus(1)
        ? "pppppp iFFP DOWN SO " ; scrollOffset ; " MO "; scrollOffset + maxOffset ; " O "; lastViableOffset
        return lastViableOffset > scrollOffset and lastViableOffset < scrollOffset + maxOffset
      end if

    end function

  end class

end namespace

namespace ml.ComponentInfoUtils
  function componentInfoFromAA(otherInfo as mc.types.assocarray)
    info = new ml.ComponentInfo(otherInfo.focusSettings, otherInfo.positionsByDirection, otherInfo.isFlowFocusAllowed, otherInfo.componentIndex, otherInfo.contentIndex)
    info.index = otherInfo.index
    return info
  end function
end namespace